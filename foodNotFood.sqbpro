<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/ckelleher/git/CodeStoriesUtil/foodNotFood.db" readonly="1" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="1369"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,12:mainCodingEvents"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CodingEvents" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="64"/><column index="2" value="61"/><column index="3" value="300"/><column index="4" value="44"/><column index="5" value="300"/><column index="6" value="66"/><column index="7" value="300"/><column index="8" value="300"/><column index="9" value="113"/></column_widths><filter_values><column index="4" value="1132"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="rep_visits">
DROP TABLE If EXISTS revisits;
DROP TABLE IF EXISTS rep_revisits;
DROP TABLE IF EXISTS reps;

-- Select all of the revisits, segment out the page name into a temp table
CREATE TEMPORARY TABLE revisits AS SELECT
	eventID as eventID,
	time as time, 
	substr(notes, 10, instr(notes, &quot;;&quot;)-10) as page 
FROM CodingEvents
WHERE INSTR(notes, &quot;revisit&quot;) &gt; 0
ORDER BY notes;

-- Create temp table with page name and counts for visits
CREATE TEMPORARY TABLE rep_revisits AS SELECT 
	page as page, 
	COUNT(page) as cnt 
FROM revisits
GROUP BY page;

-- Figure out which ones have repeated revisits
CREATE TEMPORARY TABLE reps AS SELECT page, cnt from rep_revisits
WHERE cnt &gt; 1
ORDER BY cnt DESC;


-- TODO: want to be able to return a pagename with a list of times
SELECT 
	revisits.page, 
	time 
FROM revisits
INNER JOIN reps ON reps.page = revisits.page
ORDER BY reps.page;




</sql><sql name="code files">-- ok so I want to get the repeated visits to code files

DROP TABLE If EXISTS code_evts;
DROP TABLE IF EXISTS code_files;
-- DROP TABLE IF EXISTS reps;

-- Select all of the code changes, segment out the file name into a temp table
CREATE TEMPORARY TABLE code_evts AS SELECT
	eventID as eventID,
	time as time, 
	substr(notes, 7, instr(notes, &quot;;&quot;)-7) as filename 
FROM CodingEvents
WHERE INSTR(notes, &quot;code:&quot;) &gt; 0
ORDER BY time;


-- Create temp table with page name and counts for visits
CREATE TEMPORARY TABLE code_files AS SELECT 
	filename as filename, 
	COUNT(filename) as cnt 
FROM code_evts
GROUP BY filename;

SELECT * from code_evts;

-- Figure out which ones have repeated revisits
-- CREATE TEMPORARY TABLE reps AS SELECT page, cnt from rep_revisits
-- WHERE cnt &gt; 1
-- ORDER BY cnt DESC;


-- TODO: want to be able to return a pagename with a list of times
-- SELECT 
-- 	revisits.page, 
-- 	time 
-- FROM revisits
-- INNER JOIN reps ON reps.page = revisits.page
-- ORDER BY reps.page;
</sql><sql name="search info">-- want to get searches followed by visits.
DROP TABLE If EXISTS search_evts;

-- Select all of the code changes, segment out the file name into a temp table 
CREATE TEMPORARY TABLE search_evts AS 
SELECT
	eventID as eventID,
	time as time, 
	notes as filename 
FROM CodingEvents
WHERE INSTR(notes, &quot;search:&quot;) &gt; 0
-- ORDER BY time

UNION ALL

SELECT
	eventID as eventID,
	time as time, 
	notes as filename 
FROM CodingEvents
WHERE INSTR(notes, &quot;visit:&quot;) == 1

UNION ALL

SELECT
	eventID as eventID,
	time as time, 
	notes as filename 
FROM CodingEvents
WHERE INSTR(notes, &quot;revisit:&quot;) == 1

ORDER BY time;

SELECT * from search_evts;

-- instr(&quot;hello world&quot;, &quot;hello&quot;);</sql><current_tab id="2"/></tab_sql></sqlb_project>
